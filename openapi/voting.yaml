---
openapi: "3.0.0"
info:
  version: 1.0.0
  title: Ethereum Voting
  license:
    name: gpl
servers:
  - url: https://luscofusco.tk/v1
paths:
  /elections:
    get:
      summary: List elections
      operationId: listElections
      tags:
        - elections
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of elections
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Elections"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      requestBody:
        description: Options to create the election
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateElection'
      summary: Create an election
      operationId: createElection
      tags:
        - elections
      responses:
        '201':
          description: ID of the created election
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Election"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /elections/{electionId}:
    get:
      summary: Lookup election
      operationId: showElectionById
      tags:
        - elections
      parameters:
        - name: electionId
          in: path
          required: true
          description: The id of the election to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Election information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Election"
        '401':
          description: Access to election is not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Election not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /elections/{electionId}/candidates:
    get:
      summary: List candidates
      operationId: listElectionCandidates
      tags:
        - candidates
      parameters:
        - name: electionId
          in: path
          required: true
          description: Id of the election
          schema:
            type: integer
      responses:
        '200':
          description: List of candidates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Candidate"
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /elections/{electionId}/candidates/{candidateId}:
    get:
      summary: Lookup Candidate
      operationId: lookupCandidate
      tags:
        - candidates
      parameters:
        - name: electionId
          in: path
          required: true
          description: Id of the election
          schema:
            type: integer
        - name: candidateId
          in: path
          required: true
          description: Id of the candidate
          schema:
            type: integer
      responses:
        '200':
          description: Candidate information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Candidate"
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /elections/{electionId}/candidates/{candidateId}/votes:
    get:
      summary: Get votes for a candidate
      operationId: getCandidateVotes
      tags:
        - votes
      parameters:
        - name: electionId
          in: path
          required: true
          description: Id of the election
          schema:
            type: integer
        - name: candidateId
          in: path
          required: true
          description: Id of the candidate
          schema:
            type: integer
      responses:
        '200':
          description: Vote loaded on the system
          content:
            application/json:
              schema:
                required:
                  - votes
                properties:
                  votes:
                    type: integer
                    format: int64
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Election or candidate not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Vote for a candidate
      operationId: createCandidateVote
      tags:
        - votes
      parameters:
        - name: electionId
          in: path
          required: true
          description: Id of the election
          schema:
            type: integer
        - name: candidateId
          in: path
          required: true
          description: Id of the candidate
          schema:
            type: integer
      responses:
        '201':
          description: Vote loaded on the system
        '401':
          description: Not Authorized or user already voted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Election or candidate not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Candidate:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        votes:
          type: integer
          format: int64
    CreateCandidate:
      required:
        - account
        - name
        - pkey
      properties:
        name:
          type: string
        description:
          type: string
        account:
          type: string
        pkey:
          type: string
    Election:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        candidates:
          type: array
          items:
            $ref: "#/components/schemas/Candidate"
    CreateElection:
      required:
        - name
        - account
        - pkey
      properties:
        name:
          type: string
        description:
          type: string
        candidates:
          type: array
          items:
            $ref: "#/components/schemas/CreateCandidate"
        account:
          type: string
        pkey:
          type: string
    Elections:
      type: array
      items:
        $ref: "#/components/schemas/Election"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
